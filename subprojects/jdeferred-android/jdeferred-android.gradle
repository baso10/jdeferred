/*
 * Copyright 2013-2016 Ray Tsang
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

dependencies {
    compile project(':jdeferred-core')

    testCompile "junit:junit:$junitVersion"
    testCompile "org.slf4j:slf4j-jdk14:$slf4jVersion"
    testCompile "org.awaitility:awaitility:$awaitilityVersion"
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"
    lintOptions {
        abortOnError false
    }
}

task apklib(type: Zip) {
    group 'Build'
    description 'Creates an APKLIB artifact'
    extension = 'apklib'

    from file('src/main/AndroidManifest.xml')
    into('res') {
        from 'res'
    }
    into('src') {
        from 'src'
    }
}

apply from: rootProject.file('gradle/pom.gradle')
apply from: rootProject.file('gradle/code-quality.gradle')

publishing {
    publications {
        mavenApklib(MavenPublication) {
            artifactId(project.name + '-apklib')
            artifact(apklib)
            pom.withXml {
                asNode().children().last() + pomConfig
                asNode().appendNode('description', project.project_description)
                /*
                def depNode = asNode().appendNode('dependencies')
                        .appendNode('dependency')
                depNode.appendNode('groupId', project.group)
                depNode.appendNode('artifactId', 'jdeferred-core')
                depNode.appendNode('version', project.version)
                */
            }
        }
        mavenAar(MavenPublication) {
            artifactId(project.name + '-aar')
            artifact(bundleRelease)
            pom.withXml {
                asNode().children().last() + pomConfig
                asNode().appendNode('description', project.project_description)
                /*
                def depNode = asNode().appendNode('dependencies')
                        .appendNode('dependency')
                depNode.appendNode('groupId', project.group)
                depNode.appendNode('artifactId', 'jdeferred-core')
                depNode.appendNode('version', project.version)
                */
            }
        }
    }
}

bintray {
    user         = project.bintrayUsername
    key          = project.bintrayApiKey
    publications = ['mavenApklib', 'mavenAar']
    pkg {
        repo                  = project.project_bintray_repo
        userOrg               = project.project_bintray_org
        name                  = rootProject.name
        desc                  = rootProject.project_description
        licenses              = ['Apache-2.0']
        labels                = ['jdeferred', 'promise', 'android']
        websiteUrl            = project.project_url
        issueTrackerUrl       = project.project_issues
        vcsUrl                = project.project_scm
        publicDownloadNumbers = true
    }
}